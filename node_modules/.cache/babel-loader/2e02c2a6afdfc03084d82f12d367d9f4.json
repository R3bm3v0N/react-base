{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport http from './http';\nimport * as qs from 'qs';\nexport var fetch =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(filters) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(filters);\n            _context.next = 3;\n            return http.get(\"/license\".concat(qs.stringify(filters, {\n              addQueryPrefix: true\n            })));\n\n          case 3:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data.payload);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetch(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var generate =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(payload) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return http.post('/license/generate', payload);\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data.payload);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function generate(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var insert =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(payload) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return http.post('/license', payload);\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.data.payload);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function insert(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:\\ppp\\react-base\\src\\app\\services\\license.ts"],"names":["http","qs","fetch","filters","console","log","get","stringify","addQueryPrefix","response","data","payload","generate","post","insert"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAGA,OAAO,IAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AADmB;AAAA,mBAEIH,IAAI,CAACM,GAAL,mBAAoBL,EAAE,CAACM,SAAH,CAAaJ,OAAb,EAAsB;AAACK,cAAAA,cAAc,EAAE;AAAjB,aAAtB,CAApB,EAFJ;;AAAA;AAEbC,YAAAA,QAFa;AAAA,6CAGZA,QAAQ,CAACC,IAAT,CAAcC,OAHF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALT,KAAK;AAAA;AAAA;AAAA,GAAX;AAMP,OAAO,IAAMU,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOD,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGX,IAAI,CAACa,IAAL,CAAU,mBAAV,EAA+BF,OAA/B,CADH;;AAAA;AACdF,YAAAA,QADc;AAAA,8CAEbA,QAAQ,CAACC,IAAT,CAAcC,OAFD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARC,QAAQ;AAAA;AAAA;AAAA,GAAd;AAMP,OAAO,IAAME,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOH,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGX,IAAI,CAACa,IAAL,CAAU,UAAV,EAAsBF,OAAtB,CADH;;AAAA;AACdF,YAAAA,QADc;AAAA,8CAEbA,QAAQ,CAACC,IAAT,CAAcC,OAFD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANG,MAAM;AAAA;AAAA;AAAA,GAAZ","sourcesContent":["import http from './http';\r\nimport * as qs from 'qs';\r\n\r\n\r\nexport const fetch = async (filters) => {\r\n  console.log(filters)\r\n  const response = await http.get(`/license${qs.stringify(filters, {addQueryPrefix: true})}`);\r\n  return response.data.payload;\r\n}\r\n\r\nexport const generate = async (payload) => {\r\n    const response = await http.post('/license/generate', payload);\r\n    return response.data.payload;\r\n}\r\n\r\n\r\nexport const insert = async (payload) => {\r\n  const response = await http.post('/license', payload);\r\n  return response.data.payload;\r\n}"]},"metadata":{},"sourceType":"module"}