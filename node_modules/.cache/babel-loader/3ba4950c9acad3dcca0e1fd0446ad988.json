{"ast":null,"code":"import \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/alert/style/css\";\nimport _Alert from \"antd/es/alert\";\nimport \"antd/es/typography/style/css\";\nimport _Typography from \"antd/es/typography\";\nimport _classCallCheck from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\ppp\\\\react-base\\\\src\\\\app\\\\pages\\\\Login\\\\components\\\\LoginForm\\\\index.tsx\";\nimport * as React from 'react';\nimport connect from './connect';\nimport './styles.css';\n\nvar NormalLoginForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NormalLoginForm, _React$Component);\n\n  function NormalLoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NormalLoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NormalLoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          var username = values.username,\n              password = values.password;\n\n          _this.props.login(username, password);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NormalLoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$props = this.props,\n          error = _this$props.error,\n          loginPending = _this$props.loginPending;\n      return React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, error && React.createElement(_Alert, {\n        message: React.createElement(React.Fragment, null, error.code && React.createElement(_Typography.Text, {\n          code: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, error.code), \" \", error.message),\n        type: \"error\",\n        style: {\n          marginBottom: 24\n        },\n        showIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, getFieldDecorator('username', {\n        rules: [{\n          required: true,\n          message: 'ユーザー名を入力してください。'\n        }]\n      })(React.createElement(_Input, {\n        disabled: loginPending,\n        prefix: React.createElement(_Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }),\n        placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'パスワードを入力してください。'\n        }]\n      })(React.createElement(_Input.Password, {\n        disabled: loginPending,\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, getFieldDecorator('remember', {\n        valuePropName: 'checked',\n        initialValue: true\n      })(React.createElement(_Checkbox, {\n        disabled: loginPending,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"\\u30ED\\u30B0\\u30A4\\u30F3\\u72B6\\u614B\\u3092\\u4FDD\\u6301\\u3059\\u308B\")), React.createElement(_Button, {\n        loading: loginPending,\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"\\u30ED\\u30B0\\u30A4\\u30F3\")));\n    }\n  }]);\n\n  return NormalLoginForm;\n}(React.Component);\n\nvar WrappedNormalLoginForm = _Form.create({\n  name: 'normal_login'\n})(NormalLoginForm);\n\nexport default connect(WrappedNormalLoginForm);","map":{"version":3,"sources":["D:\\ppp\\react-base\\src\\app\\pages\\Login\\components\\LoginForm\\index.tsx"],"names":["React","connect","NormalLoginForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","username","password","login","getFieldDecorator","error","loginPending","code","message","marginBottom","rules","required","color","valuePropName","initialValue","Component","WrappedNormalLoginForm","create","name"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Form, Icon, Input, Button, Checkbox, Alert, Typography } from 'antd';\r\nimport connect from './connect';\r\nimport './styles.css';\r\n\r\nclass NormalLoginForm extends React.Component<any> {\r\n  handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        let {username, password} = values;\r\n        this.props.login(username, password);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { error, loginPending} = this.props;\r\n    \r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        {error && <Alert message={<>{error.code && <Typography.Text code>{error.code}</Typography.Text>} {error.message}</>} type=\"error\" style={{ marginBottom: 24 }} showIcon/>}\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'ユーザー名を入力してください。' }],\r\n          })(\r\n            <Input\r\n              disabled={loginPending}\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"ユーザー名\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'パスワードを入力してください。' }],\r\n          })(\r\n            <Input.Password\r\n              disabled={loginPending}\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"パスワード\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('remember', {\r\n            valuePropName: 'checked',\r\n            initialValue: true,\r\n          })(<Checkbox disabled={loginPending}>ログイン状態を保持する</Checkbox>)}\r\n          {/* <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a> */}\r\n          <Button loading={loginPending} type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          ログイン\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\r\n\r\nexport default connect(WrappedNormalLoginForm);"]},"metadata":{},"sourceType":"module"}