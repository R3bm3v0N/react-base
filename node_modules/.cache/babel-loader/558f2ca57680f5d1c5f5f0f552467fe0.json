{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport http from './http';\nexport var login =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(username, password) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return http.post('/login', {\n              email: username,\n              password: password\n            });\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function login(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var search =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(keyword) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return http.get('/user', {\n              params: {\n                keyword: keyword,\n                limit: 10\n              }\n            });\n\n          case 2:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response.data.payload);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function search(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var checkEmail =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(email) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return http.get('/user/check-email-exists', {\n              params: {\n                email: email\n              }\n            });\n\n          case 2:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.data.payload);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function checkEmail(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["D:\\ppp\\react-base\\src\\app\\services\\user.ts"],"names":["http","login","username","password","post","email","response","search","keyword","get","params","limit","data","payload","checkEmail"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,OAAO,IAAMC,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACIH,IAAI,CAACI,IAAL,CAAU,QAAV,EAAoB;AACzCC,cAAAA,KAAK,EAACH,QADmC;AAEzCC,cAAAA,QAAQ,EAARA;AAFyC,aAApB,CADJ;;AAAA;AACbG,YAAAA,QADa;AAAA,6CAKZA,QALY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALL,KAAK;AAAA;AAAA;AAAA,GAAX;AAQP,OAAO,IAAMM,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGR,IAAI,CAACS,GAAL,CAAS,OAAT,EAAkB;AACvCC,cAAAA,MAAM,EAAE;AACNF,gBAAAA,OAAO,EAAPA,OADM;AAENG,gBAAAA,KAAK,EAAE;AAFD;AAD+B,aAAlB,CADH;;AAAA;AACdL,YAAAA,QADc;AAAA,8CAObA,QAAQ,CAACM,IAAT,CAAcC,OAPD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANN,MAAM;AAAA;AAAA;AAAA,GAAZ;AAUP,OAAO,IAAMO,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOT,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDL,IAAI,CAACS,GAAL,CAAS,0BAAT,EAAqC;AAC1DC,cAAAA,MAAM,EAAE;AACNL,gBAAAA,KAAK,EAALA;AADM;AADkD,aAArC,CADC;;AAAA;AAClBC,YAAAA,QADkB;AAAA,8CAMjBA,QAAQ,CAACM,IAAT,CAAcC,OANG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVC,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["import http from './http';\r\n\r\nexport const login = async (username, password) => {\r\n  const response = await http.post('/login', {\r\n    email:username,\r\n    password\r\n  });\r\n  return response;\r\n}\r\n\r\nexport const search = async (keyword) => {\r\n  const response = await http.get('/user', {\r\n    params: {\r\n      keyword,\r\n      limit: 10,\r\n    }\r\n  });\r\n  return response.data.payload;\r\n}\r\n\r\nexport const checkEmail = async (email) => {\r\n  const response = await http.get('/user/check-email-exists', {\r\n    params: {\r\n      email,\r\n    }\r\n  });\r\n  return response.data.payload;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}