{"ast":null,"code":"import \"antd/es/switch/style/css\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/input-number/style/css\";\nimport _InputNumber from \"antd/es/input-number\";\nimport \"antd/es/auto-complete/style/css\";\nimport _AutoComplete from \"antd/es/auto-complete\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/tooltip/style/css\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/typography/style/css\";\nimport _Typography from \"antd/es/typography\";\nimport _regeneratorRuntime from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport _asyncToGenerator from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/date-picker/style/css\";\nimport _DatePicker from \"antd/es/date-picker\";\n\nvar _temp,\n    _jsxFileName = \"D:\\\\ppp\\\\react-base\\\\src\\\\app\\\\pages\\\\License\\\\components\\\\AddNewForm.tsx\";\n\nimport * as React from 'react';\nimport debounce from 'lodash/debounce';\nimport api from '../../../services';\nimport './AddNewForm.css';\nvar RangePicker = _DatePicker.RangePicker;\n\nvar AddNewForm = _Form.create({\n  name: 'form_in_modal'\n})(( // eslint-disable-next-line\n_temp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_temp, _React$Component);\n\n  function _temp(props) {\n    var _this;\n\n    _classCallCheck(this, _temp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_temp).call(this, props));\n    _this.form = React.createRef();\n    _this.state = {\n      newKeyPending: false,\n      customers: [],\n      customerId: undefined,\n      customerSearchPending: false,\n      customerEmailDataSource: [],\n      customerEmailValidateStatus: '',\n      customerEmailValidateError: ''\n    };\n\n    _this.handleGenerateNewKey = function () {\n      _this.setState({\n        newKeyPending: true\n      },\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var newKey;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return api.license.generate({});\n\n              case 3:\n                newKey = _context.sent;\n\n                _this.setState({\n                  newKeyPending: false\n                }, function () {\n                  // https://ant.design/components/form/#this.props.form.getFieldDecorator(id,-options)\n                  // => You shouldn't call setState manually, please use this.props.form.setFieldsValue to change value programmatically.\n                  _this.props.form.setFieldsValue({\n                    key: newKey\n                  });\n                });\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this.setState({\n                  newKeyPending: false\n                }, function () {\n                  return _message.error(_context.t0.message);\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      })));\n    };\n\n    _this.handleLoadCustomer = function (keyword) {\n      _this.setState({\n        customerSearchPending: true\n      },\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var customers;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return api.user.search(keyword);\n\n              case 3:\n                customers = _context2.sent;\n\n                _this.setState({\n                  customerSearchPending: false,\n                  customers: customers\n                });\n\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                _this.setState({\n                  customerSearchPending: false\n                }, function () {\n                  return _message.error(_context2.t0.message);\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      })));\n    };\n\n    _this.handleCustomerChange = function (customerId) {\n      console.log(customerId);\n\n      _this.setState({\n        customerId: customerId\n      });\n    };\n\n    _this.handleChangeCustomerEmail = function (value) {\n      _this.setState({\n        customerEmailDataSource: !value || value.indexOf('@') >= 0 ? [] : [\"\".concat(value, \"@gmail.com\"), \"\".concat(value, \"@yahoo.com\"), \"\".concat(value, \"@hotmail.com\"), \"\".concat(value, \"@outlook.com\"), \"\".concat(value, \"@yahoo.co.jp\")]\n      }, function () {\n        if (value) {\n          _this.checkCustomerEmail(value);\n        } else {\n          _this.setState({\n            customerEmailValidateStatus: '',\n            customerEmailValidateError: ''\n          });\n        }\n      });\n    };\n\n    _this.checkCustomerEmail = function (email) {\n      // customerEmailValidateStatus: value ? 'validating' : '',\n      try {\n        _this.setState({\n          customerEmailValidateStatus: 'validating'\n        },\n        /*#__PURE__*/\n        _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee3() {\n          var exists;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return api.user.checkEmail(email);\n\n                case 2:\n                  exists = _context3.sent;\n\n                  _this.setState({\n                    customerEmailValidateStatus: exists ? 'error' : 'success',\n                    customerEmailValidateError: exists ? 'メールが存在します。' : ''\n                  });\n\n                case 4:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        })));\n      } catch (error) {\n        _this.setState({\n          customerEmailValidateStatus: 'error',\n          customerEmailValidateError: error.message\n        }, function () {\n          return _message.error(error.message);\n        });\n      }\n    };\n\n    _this.checkCustomerEmail = debounce(_this.checkCustomerEmail, 800);\n    return _this;\n  }\n\n  _createClass(_temp, [{\n    key: \"render\",\n    // componentWillUnmount() {\n    //   message.destroy();\n    // }\n    value: function render() {\n      var form = this.props.form;\n      var getFieldDecorator = form.getFieldDecorator;\n      var insertPending = this.props.insertPending;\n      var options = this.state.customers.map(function (d) {\n        return React.createElement(_Select.Option, {\n          key: d.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, d.name, \" - \", React.createElement(_Typography.Text, {\n          type: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, d.email));\n      });\n      options.push(React.createElement(_Select.Option, {\n        key: 'null',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"plus\",\n        style: {\n          marginRight: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), \"\\u65B0\\u898F\\u8FFD\\u52A0\"));\n      return React.createElement(_Form, {\n        layout: \"vertical\",\n        ref: this.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"\\u30E9\\u30A4\\u30BB\\u30F3\\u30B9\\u30AD\\u30FC\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, getFieldDecorator('key', {\n        rules: [{\n          required: true,\n          message: '入力してください。'\n        }]\n      })(React.createElement(_Input, {\n        readOnly: true,\n        disabled: insertPending,\n        placeholder: \"########-########-########-########\",\n        suffix: React.createElement(_Tooltip, {\n          title: \"\\u65B0\\u898F\\u30E9\\u30A4\\u30BB\\u30F3\\u30B9\\u30AD\\u30FC\\u3092\\u751F\\u6210\\u3059\\u308B\\u3002\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(_Button, {\n          style: {\n            padding: 0,\n            margin: 0,\n            display: 'inline'\n          },\n          type: \"link\",\n          disabled: insertPending || this.state.newKeyPending,\n          onClick: this.handleGenerateNewKey,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"sync\",\n          spin: this.state.newKeyPending,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u6709\\u52B9\\u6642\\u9593\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, getFieldDecorator('time', {\n        rules: [{\n          required: true,\n          message: '入力してください。'\n        }]\n      })(React.createElement(RangePicker, {\n        disabled: insertPending,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u304A\\u5BA2\\u69D8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, getFieldDecorator('customerId', {\n        rules: [{\n          required: true,\n          message: '入力してください。'\n        }]\n      })( // <Input disabled={insertPending} placeholder={'お客様名を入力してください。'} style={{ width: '100%' }} />\n      React.createElement(_Select, {\n        showSearch: true,\n        allowClear: true // value={this.state.value}\n        ,\n        placeholder: \"\\u304A\\u5BA2\\u69D8\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\",\n        style: this.props.style,\n        defaultActiveFirstOption: false,\n        filterOption: false,\n        onSearch: this.handleLoadCustomer,\n        onChange: this.handleCustomerChange,\n        notFoundContent: null,\n        loading: this.state.customerSearchPending,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, options))), this.state.customerId === 'null' && React.createElement(_Form.Item, {\n        style: {\n          padding: 10,\n          background: '#ebebeb',\n          borderRadius: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"\\u304A\\u5BA2\\u69D8\\u540D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, getFieldDecorator('customerName', {\n        rules: [{\n          required: true,\n          message: '入力してください。'\n        }]\n      })(React.createElement(_Input, {\n        disabled: insertPending,\n        placeholder: \"\\u4F8B\\uFF1A\\u592A\\u90CE\\u69D8\",\n        suffix: React.createElement(_Icon, {\n          type: \"edit\",\n          style: {\n            color: 'rgba(0, 0, 0, 0.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u304A\\u5BA2\\u69D8\\u306E\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\",\n        hasFeedback: true,\n        validateStatus: this.state.customerEmailValidateStatus,\n        help: this.state.customerEmailValidateError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, getFieldDecorator('customerEmail', {\n        rules: [{\n          required: true,\n          message: '入力してください。'\n        }]\n      })(React.createElement(_AutoComplete, {\n        disabled: insertPending,\n        dataSource: this.state.customerEmailDataSource,\n        onChange: this.handleChangeCustomerEmail,\n        placeholder: \"\\u4F8B\\uFF1Atarokun@gmail.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        suffix: this.state.customerEmailValidateStatus === null && React.createElement(_Icon, {\n          type: \"edit\",\n          style: {\n            color: 'rgba(0, 0, 0, 0.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }))))), React.createElement(_Form.Item, {\n        style: {\n          marginBottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(_Form.Item, {\n        label: \"\\u6700\\u5927\\u9867\\u5BA2\\u6570\",\n        style: {\n          display: 'inline-block',\n          width: '50%',\n          marginBottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, getFieldDecorator('maxClient', {\n        initialValue: 1,\n        rules: [{\n          required: true,\n          message: '入力してください。'\n        }]\n      })(React.createElement(_InputNumber, {\n        placeholder: \"\\u6700\\u5927\\u9867\\u5BA2\\u6570\",\n        min: 1,\n        max: 10000,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        label: \"\\u6709\\u52B9\",\n        labelAlign: \"right\",\n        className: \"patch-align-right\",\n        style: {\n          display: 'inline-block',\n          width: '50%',\n          textAlign: 'right',\n          marginBottom: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, getFieldDecorator('type', {\n        initialValue: true // defaultChecked: true\n\n      })(React.createElement(_Switch, {\n        disabled: insertPending,\n        defaultChecked: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return _temp;\n}(React.Component), _temp));\n\nexport default AddNewForm;","map":{"version":3,"sources":["D:\\ppp\\react-base\\src\\app\\pages\\License\\components\\AddNewForm.tsx"],"names":["React","debounce","api","RangePicker","AddNewForm","create","name","props","form","createRef","state","newKeyPending","customers","customerId","undefined","customerSearchPending","customerEmailDataSource","customerEmailValidateStatus","customerEmailValidateError","handleGenerateNewKey","setState","license","generate","newKey","setFieldsValue","key","error","message","handleLoadCustomer","keyword","user","search","handleCustomerChange","console","log","handleChangeCustomerEmail","value","indexOf","checkCustomerEmail","email","checkEmail","exists","getFieldDecorator","insertPending","options","map","d","id","push","marginRight","rules","required","padding","margin","display","width","style","background","borderRadius","color","marginBottom","initialValue","textAlign","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { AutoComplete, Tooltip, Form, Input, InputNumber, Icon, DatePicker, Switch, Select, Typography, message, Button} from 'antd';\r\nimport debounce from 'lodash/debounce';\r\nimport api from '../../../services'\r\nimport './AddNewForm.css';\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst AddNewForm = Form.create<any>({ name: 'form_in_modal' })(\r\n  // eslint-disable-next-line\r\n  class extends React.Component<any,any> {\r\n    form = React.createRef<any>();\r\n\r\n    state = {\r\n      newKeyPending: false,\r\n      customers: [] as any[],\r\n      customerId: undefined,\r\n      customerSearchPending: false,\r\n      customerEmailDataSource: [],\r\n      customerEmailValidateStatus: '',\r\n      customerEmailValidateError: ''\r\n    };\r\n\r\n    constructor(props: any) {\r\n      super(props);\r\n      this.checkCustomerEmail = debounce(this.checkCustomerEmail, 800);\r\n    }\r\n\r\n    handleGenerateNewKey = () => {\r\n      this.setState({\r\n        newKeyPending: true\r\n      }, async () => {\r\n        try {\r\n          let newKey = await api.license.generate({});\r\n          this.setState({\r\n            newKeyPending: false,\r\n          }, () => {\r\n            // https://ant.design/components/form/#this.props.form.getFieldDecorator(id,-options)\r\n            // => You shouldn't call setState manually, please use this.props.form.setFieldsValue to change value programmatically.\r\n            this.props.form.setFieldsValue({\r\n              key: newKey\r\n            })\r\n          })\r\n        } catch(error) {\r\n          this.setState({\r\n            newKeyPending: false,\r\n          }, () => message.error(error.message))\r\n        }\r\n      })\r\n    };\r\n\r\n    handleLoadCustomer = (keyword: string) => {\r\n      this.setState({\r\n        customerSearchPending: true\r\n      }, async () => {\r\n        try {\r\n          let customers = await api.user.search(keyword);\r\n          this.setState({\r\n            customerSearchPending: false,\r\n            customers\r\n          });\r\n        } catch(error) {\r\n          this.setState({\r\n            customerSearchPending: false,\r\n          }, () => message.error(error.message))\r\n        }\r\n      })\r\n    }\r\n\r\n    handleCustomerChange = (customerId: number) => {\r\n      console.log(customerId)\r\n      this.setState({\r\n        customerId\r\n      })\r\n    }\r\n\r\n    handleChangeCustomerEmail = (value: string) => {\r\n      this.setState({\r\n        customerEmailDataSource:\r\n          !value || value.indexOf('@') >= 0\r\n            ? []\r\n            : [\r\n              `${value}@gmail.com`, \r\n              `${value}@yahoo.com`, \r\n              `${value}@hotmail.com`,\r\n              `${value}@outlook.com`,\r\n              `${value}@yahoo.co.jp`,\r\n            ],\r\n      }, ()=> {\r\n        if(value) {\r\n          this.checkCustomerEmail(value);\r\n        } else {\r\n          this.setState({\r\n            customerEmailValidateStatus: '',\r\n            customerEmailValidateError: ''\r\n          })\r\n        }\r\n      });\r\n    }\r\n\r\n    checkCustomerEmail = (email: string) => {\r\n      // customerEmailValidateStatus: value ? 'validating' : '',\r\n      \r\n      try {\r\n        this.setState({\r\n          customerEmailValidateStatus: 'validating',\r\n        }, async () => {\r\n          let exists = await api.user.checkEmail(email);\r\n          this.setState({\r\n            customerEmailValidateStatus: exists ? 'error' : 'success',\r\n            customerEmailValidateError: exists ? 'メールが存在します。' : ''\r\n          });\r\n        });\r\n      } catch(error) {\r\n        this.setState({\r\n          customerEmailValidateStatus: 'error',\r\n          customerEmailValidateError: error.message\r\n        }, () => message.error(error.message))\r\n      }\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //   message.destroy();\r\n    // }\r\n\r\n    render() {\r\n      const { form } = this.props;\r\n      const { getFieldDecorator } = form;\r\n      const insertPending = this.props.insertPending as boolean;\r\n      const options = this.state.customers.map(d => \r\n        <Select.Option key={d.id}>\r\n        {d.name} - <Typography.Text type=\"secondary\">{d.email}</Typography.Text>\r\n        </Select.Option>\r\n      );\r\n      options.push(<Select.Option key={'null'}><Icon type=\"plus\" style={{marginRight: 5}}/>新規追加</Select.Option>);\r\n\r\n\r\n      return (\r\n        <Form layout=\"vertical\" ref={this.form}>\r\n          <Form.Item label=\"ライセンスキー\">\r\n            {getFieldDecorator('key', {\r\n              rules: [{ required: true, message: '入力してください。' }],\r\n            })(<Input\r\n              readOnly\r\n              disabled={insertPending} \r\n              placeholder=\"########-########-########-########\"\r\n              suffix={\r\n                <Tooltip title=\"新規ライセンスキーを生成する。\"><Button style={{padding:0, margin:0, display: 'inline'}} type='link' disabled={insertPending || this.state.newKeyPending} onClick={this.handleGenerateNewKey}><Icon type=\"sync\" spin={this.state.newKeyPending}/></Button></Tooltip>\r\n              }\r\n            />)}\r\n          </Form.Item>\r\n          <Form.Item label=\"有効時間\">\r\n            {getFieldDecorator('time', {\r\n              rules: [{ required: true, message: '入力してください。' }],\r\n            })(<RangePicker disabled={insertPending} style={{ width: '100%' }} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"お客様\">\r\n            {getFieldDecorator('customerId', {\r\n              rules: [{ required: true, message: '入力してください。' }],\r\n            })(\r\n            // <Input disabled={insertPending} placeholder={'お客様名を入力してください。'} style={{ width: '100%' }} />\r\n            <Select\r\n              showSearch\r\n              allowClear\r\n              // value={this.state.value}\r\n              placeholder=\"お客様を選択してください。\"\r\n              style={this.props.style}\r\n              defaultActiveFirstOption={false}\r\n              filterOption={false}\r\n              onSearch={this.handleLoadCustomer}\r\n              onChange={this.handleCustomerChange}\r\n              notFoundContent={null}\r\n              loading={this.state.customerSearchPending}\r\n            >\r\n              {options}\r\n            </Select>\r\n            )}\r\n          </Form.Item>\r\n\r\n          {\r\n          this.state.customerId === 'null' &&\r\n          <Form.Item style={{padding: 10, background: '#ebebeb', borderRadius: 4}}>\r\n            <Form.Item label=\"お客様名\">\r\n              {getFieldDecorator('customerName', {\r\n                rules: [{ required: true, message: '入力してください。' }],\r\n              })(<Input\r\n                disabled={insertPending}\r\n                placeholder=\"例：太郎様\"\r\n                suffix={\r\n                  <Icon type=\"edit\" style={{ color: 'rgba(0, 0, 0, 0.25)' }}/>\r\n                }\r\n              />)}\r\n            </Form.Item>\r\n            <Form.Item label=\"お客様のメールアドレス\"\r\n            hasFeedback\r\n            validateStatus={this.state.customerEmailValidateStatus}\r\n            help={this.state.customerEmailValidateError}\r\n            >\r\n              {getFieldDecorator('customerEmail', {\r\n                rules: [{ required: true, message: '入力してください。' }],\r\n              })(<AutoComplete\r\n                disabled={insertPending} \r\n                dataSource={this.state.customerEmailDataSource}\r\n                onChange={this.handleChangeCustomerEmail}\r\n                placeholder=\"例：tarokun@gmail.com\"\r\n              >\r\n              <Input suffix={this.state.customerEmailValidateStatus === null && <Icon type=\"edit\" style={{ color: 'rgba(0, 0, 0, 0.25)' }}/>} />\r\n              </AutoComplete>)}\r\n            </Form.Item>\r\n          </Form.Item>\r\n          }\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <Form.Item label=\"最大顧客数\" style={{ display: 'inline-block', width: '50%', marginBottom: 0 }}>\r\n              {getFieldDecorator('maxClient', {\r\n                initialValue: 1,\r\n                rules: [{ required: true, message: '入力してください。' }],\r\n              })(<InputNumber placeholder='最大顧客数' min={1} max={10000} />)}\r\n            </Form.Item>\r\n            {/* <div style={{float:'right'}}> */}\r\n            <Form.Item label=\"有効\" labelAlign=\"right\" className=\"patch-align-right\" \r\n            style={{ display: 'inline-block', width: '50%', textAlign: 'right', marginBottom: 0}}\r\n            >\r\n              {getFieldDecorator('type', {\r\n                initialValue: true,\r\n                // defaultChecked: true\r\n              })(\r\n                <Switch disabled={insertPending} defaultChecked/>,\r\n              )}\r\n            </Form.Item>\r\n            {/* </div> */}\r\n          </Form.Item>\r\n        </Form>\r\n      );\r\n    }\r\n  },\r\n);\r\n\r\nexport default AddNewForm;"]},"metadata":{},"sourceType":"module"}