{"ast":null,"code":"import { createReducer } from 'deox';\nimport * as actions from './actions';\nimport update from 'immutability-helper';\nvar login = actions.login,\n    loginSuccess = actions.loginSuccess,\n    loginError = actions.loginError;\nvar defaultState = {\n  status: undefined,\n  error: undefined\n};\nexport default createReducer(defaultState, function (handleAction) {\n  return [handleAction(login, function (state, action) {\n    return update(state, {\n      status: {\n        $set: 'pending'\n      },\n      error: {\n        $set: undefined\n      }\n    });\n  }), handleAction(loginSuccess, function (state, action) {\n    return update(state, {\n      status: {\n        $set: 'success'\n      },\n      error: {\n        $set: undefined\n      }\n    });\n  }), handleAction(loginError, function (state, action) {\n    return update(state, {\n      status: {\n        $set: 'error'\n      },\n      error: {\n        $set: action.payload\n      }\n    });\n  })];\n});","map":{"version":3,"sources":["D:\\ppp\\react-base\\src\\app\\pages\\Login\\redux\\reducers.ts"],"names":["createReducer","actions","update","login","loginSuccess","loginError","defaultState","status","undefined","error","handleAction","state","action","$set","payload"],"mappings":"AAAA,SAASA,aAAT,QAA8B,MAA9B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;IAGEC,K,GAGEF,O,CAHFE,K;IACAC,Y,GAEEH,O,CAFFG,Y;IACAC,U,GACEJ,O,CADFI,U;AAWF,IAAMC,YAAmB,GAAG;AAC1BC,EAAAA,MAAM,EAAEC,SADkB;AAE1BC,EAAAA,KAAK,EAAED;AAFmB,CAA5B;AAKA,eAAeR,aAAa,CAACM,YAAD,EAAe,UAACI,YAAD;AAAA,SAAkB,CAC3DA,YAAY,CAACP,KAAD,EAAQ,UAACQ,KAAD,EAAQC,MAAR;AAAA,WAAyBV,MAAM,CAACS,KAAD,EAAQ;AACzDJ,MAAAA,MAAM,EAAE;AAAEM,QAAAA,IAAI,EAAE;AAAR,OADiD;AAEzDJ,MAAAA,KAAK,EAAE;AAAEI,QAAAA,IAAI,EAAEL;AAAR;AAFkD,KAAR,CAA/B;AAAA,GAAR,CAD+C,EAK3DE,YAAY,CAACN,YAAD,EAAe,UAACO,KAAD,EAAQC,MAAR;AAAA,WAAyBV,MAAM,CAACS,KAAD,EAAQ;AAChEJ,MAAAA,MAAM,EAAE;AAAEM,QAAAA,IAAI,EAAE;AAAR,OADwD;AAEhEJ,MAAAA,KAAK,EAAE;AAAEI,QAAAA,IAAI,EAAEL;AAAR;AAFyD,KAAR,CAA/B;AAAA,GAAf,CAL+C,EAS3DE,YAAY,CAACL,UAAD,EAAa,UAACM,KAAD,EAAQC,MAAR;AAAA,WAAyBV,MAAM,CAACS,KAAD,EAAQ;AAC9DJ,MAAAA,MAAM,EAAE;AAAEM,QAAAA,IAAI,EAAE;AAAR,OADsD;AAE9DJ,MAAAA,KAAK,EAAE;AAAEI,QAAAA,IAAI,EAAED,MAAM,CAACE;AAAf;AAFuD,KAAR,CAA/B;AAAA,GAAb,CAT+C,CAAlB;AAAA,CAAf,CAA5B","sourcesContent":["import { createReducer } from 'deox'\r\nimport * as actions from './actions';\r\nimport update from 'immutability-helper';\r\n\r\nconst { \r\n  login,\r\n  loginSuccess,\r\n  loginError\r\n} = actions;\r\n\r\nexport type State = {\r\n  status?: string,\r\n  error?: {\r\n    code: string,\r\n    message: string,\r\n  }\r\n}\r\n\r\nconst defaultState: State = {\r\n  status: undefined,\r\n  error: undefined\r\n}\r\n\r\nexport default createReducer(defaultState, (handleAction) => [\r\n  handleAction(login, (state, action : any) => update(state, {\r\n    status: { $set: 'pending'},\r\n    error: { $set: undefined}\r\n  })),\r\n  handleAction(loginSuccess, (state, action : any) => update(state, {\r\n    status: { $set: 'success'},\r\n    error: { $set: undefined}\r\n  })),\r\n  handleAction(loginError, (state, action : any) => update(state, {\r\n    status: { $set: 'error'},\r\n    error: { $set: action.payload }\r\n  })),\r\n]);"]},"metadata":{},"sourceType":"module"}