{"ast":null,"code":"import \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style/css\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/list/style/css\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport _objectSpread from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport \"antd/es/popconfirm/style/css\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport \"antd/es/switch/style/css\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/tag/style/css\";\nimport _Tag from \"antd/es/tag\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport _regeneratorRuntime from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\ppp\\\\react-base\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\ppp\\\\react-base\\\\src\\\\app\\\\pages\\\\License\\\\index.tsx\";\nimport * as React from \"react\";\nimport update from 'immutability-helper';\nimport moment from 'moment';\nimport api from '../../services';\nimport connect from './connect';\nimport SearchForm from './components/SearchForm';\nimport AddNewForm from './components/AddNewForm';\n\nvar License =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(License, _React$Component);\n\n  function License() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, License);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(License)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modal: {\n        visible: false\n      },\n      table: {\n        pagination: {\n          pageSize: 10\n        },\n        data: [],\n        fetching: false,\n        expandedRowKeys: new Set(),\n        visibleRowKeys: new Set(),\n        query: {\n          paging: {\n            limit: 10,\n            page: 1,\n            sort: null\n          },\n          filters: {}\n        }\n      }\n    };\n    _this.fetchTableData =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.license.fetch(_this.state.table.query);\n\n            case 2:\n              data = _context.sent;\n\n              _this.setState(update(_this.state, {\n                table: {\n                  data: {\n                    $set: data\n                  },\n                  fetching: {\n                    $set: true\n                  }\n                }\n              }), function () {\n                _this.setState(update(_this.state, {\n                  table: {\n                    fetching: {\n                      $set: false\n                    }\n                  }\n                }));\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.meta = [{\n      title: 'ライセンスキー',\n      dataIndex: 'key',\n      render: function render(text, record) {\n        var visible = _this.state.table.visibleRowKeys.has(record.key);\n\n        return React.createElement(React.Fragment, null, visible ? text : ('#'.repeat(8) + '-').repeat(3) + text.slice(-8), \"\\u3000\", React.createElement(\"a\", {\n          href: \"#n\",\n          onClick: function onClick() {\n            return _this.handleToggleKeyVisible(record);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: visible ? 'eye-invisible' : 'eye',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        })));\n      }\n    }, {\n      title: '開始日',\n      dataIndex: 'created_at',\n      render: function render(text, record) {\n        return React.createElement(React.Fragment, null, moment(text).format('Y/MM/DD'));\n      }\n    }, {\n      title: '有効期限',\n      dataIndex: 'expire',\n      render: function render(text, record) {\n        return React.createElement(React.Fragment, null, moment(text).format('Y/MM/DD'));\n      }\n    }, {\n      title: 'お客様名',\n      dataIndex: 'name',\n      render: function render(text, record) {\n        return React.createElement(React.Fragment, null, React.createElement(_Tag, {\n          color: record.type === 1 ? 'geekblue' : 'green',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, {\n          1: '個人',\n          2: '法人'\n        }[record.type]), text);\n      }\n    }, {\n      title: 'デバイス',\n      dataIndex: 'device_count',\n      render: function render(text, record) {\n        return React.createElement(React.Fragment, null, record.device_count, \"\\u4EF6\\u3000\", record.device_count > 0 && React.createElement(\"span\", {\n          className: \"ant-table-row-expand-icon ant-table-row-\".concat(_this.state.table.expandedRowKeys.has(record.key) ? 'expanded' : 'collapsed'),\n          onClick: function onClick() {\n            return _this.handleExpand(record);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }));\n      }\n    }, {\n      title: '状態',\n      dataIndex: 'enabled',\n      render: function render(text, record) {\n        return React.createElement(_Popconfirm, {\n          title: \"Are you sure\\uFF1F\",\n          okText: \"Yes\",\n          cancelText: \"No\",\n          onConfirm: function onConfirm() {},\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(_Switch, {\n          size: \"small\",\n          checked: record.enabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }));\n      }\n    }];\n\n    _this.handleExpand =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(record) {\n        var oldExpands, collapsed, data, idx;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                oldExpands = _this.state.table.expandedRowKeys;\n                collapsed = oldExpands.has(record.key);\n                collapsed ? oldExpands[\"delete\"](record.key) : oldExpands.add(record.key);\n\n                _this.setState(update(_this.state, {\n                  table: {\n                    expandedRowKeys: {\n                      $set: oldExpands\n                    }\n                  }\n                }));\n\n                if (collapsed) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _context2.next = 7;\n                return api.device.fetch({\n                  license_key: record.key\n                });\n\n              case 7:\n                data = _context2.sent;\n                // this.state.table.data.findIndex(v=>v.key===record.key);\n                idx = _this.state.table.data.findIndex(function (v) {\n                  return v.key === record.key;\n                });\n\n                _this.setState(update(_this.state, {\n                  table: {\n                    data: _defineProperty({}, idx, {\n                      devices: {\n                        $set: data\n                      }\n                    })\n                  }\n                }));\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleToggleKeyVisible = function (record) {\n      var oldVisibles = _this.state.table.visibleRowKeys;\n      oldVisibles.has(record.key) ? oldVisibles[\"delete\"](record.key) : oldVisibles.add(record.key);\n\n      _this.setState(update(_this.state, {\n        table: {\n          visibleRowKeys: {\n            $set: oldVisibles\n          }\n        }\n      }));\n    };\n\n    _this.showModal = function () {\n      _this.setState(update(_this.state, {\n        modal: {\n          visible: {\n            $set: true\n          }\n        }\n      }));\n    };\n\n    _this.hideModal = function () {\n      _this.setState(update(_this.state, {\n        modal: {\n          visible: {\n            $set: false\n          }\n        }\n      }));\n    };\n\n    _this.addNewForm = React.createRef();\n\n    _this.handleCreate = function () {\n      var form = _this.addNewForm;\n      form.current.validateFields(function (err, values) {\n        if (err) {\n          return;\n        }\n\n        if (values.customerId === 'null') {\n          values.customerId = null;\n        }\n\n        _this.props.insert(values);\n      });\n    };\n\n    _this.handleTableChange = function (pagination, filters, sorter) {\n      var pager = _objectSpread({}, _this.state.table.pagination);\n\n      pager.current = pagination.current;\n\n      _this.setState({\n        pagination: pager,\n        query: {\n          paging: {\n            limit: pagination.pageSize,\n            page: pagination.current,\n            sort: (sorter.order === 'ascend' ? '' : '-') + sorter.field\n          },\n          filters: filters\n        }\n      }, _this.fetchTableData);\n    };\n\n    _this.handleOnFilterChange = function (filters) {\n      _this.setState(update(_this.state, {\n        table: {\n          query: {\n            filters: {\n              $set: filters\n            }\n          }\n        }\n      }), _this.fetchTableData);\n    };\n\n    return _this;\n  }\n\n  _createClass(License, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchTableData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    // saveFormRef = formRef => {\n    //   this.formRef = formRef;\n    // };\n    value: function componentDidUpdate(prevProps) {\n      var form = this.addNewForm;\n\n      if (prevProps.insert.status === 'pending') {\n        if (this.props.insert.status === 'success') {\n          _message.success('データを追加した。');\n\n          form.current.resetFields();\n          this.hideModal();\n        } else {\n          _message.error('データの追加に失敗しました。');\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var insertPending = this.props.insert.status === 'pending';\n      var _this$state = this.state,\n          table = _this$state.table,\n          modal = _this$state.modal;\n      var rowKeys = Array.from(table.expandedRowKeys);\n      return React.createElement(_Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(_Col, {\n        span: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(_Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        icon: \"plus\",\n        onClick: this.showModal,\n        type: \"primary\",\n        style: {\n          marginBottom: 16,\n          \"float\": 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"\\u65B0\\u898F\\u8FFD\\u52A0\"), React.createElement(SearchForm, {\n        onFilterChange: this.handleOnFilterChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"search-result-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        dataSource: table.data,\n        pagination: table.pagination,\n        rowKey: function rowKey(record) {\n          return record.key;\n        },\n        loading: table.fetching,\n        columns: this.meta,\n        onChange: this.handleTableChange,\n        expandedRowKeys: rowKeys,\n        expandIconAsCell: false,\n        expandIcon: function expandIcon() {\n          return React.createElement(React.Fragment, null);\n        },\n        expandedRowRender: function expandedRowRender(record) {\n          return React.createElement(_List, {\n            size: \"small\",\n            dataSource: record.devices,\n            renderItem: function renderItem(item, key) {\n              return React.createElement(_List.Item, {\n                key: key,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 288\n                },\n                __self: this\n              }, React.createElement(_Row, {\n                style: {\n                  width: '100%'\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 289\n                },\n                __self: this\n              }, React.createElement(_Col, {\n                span: 10,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 290\n                },\n                __self: this\n              }, key + 1, \".\\xA0\", item.info), React.createElement(_Col, {\n                span: 10,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 291\n                },\n                __self: this\n              }, item.id), React.createElement(_Col, {\n                span: 4,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 292\n                },\n                __self: this\n              }, React.createElement(\"span\", {\n                style: {\n                  \"float\": 'right'\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 293\n                },\n                __self: this\n              }, moment(item.created_at).format('Y/MM/DD'), \"\\u306B\\u6D3B\\u6027\\u5316\"))));\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }))), React.createElement(_Modal, {\n        visible: modal.visible,\n        title: \"\\u65B0\\u898F\\u30E9\\u30A4\\u30BB\\u30F3\\u30B9\\u30AD\\u30FC\\u3092\\u8FFD\\u52A0\",\n        okText: \"\\u8FFD\\u52A0\",\n        onCancel: this.hideModal,\n        onOk: this.handleCreate,\n        confirmLoading: insertPending,\n        cancelButtonProps: {\n          disabled: insertPending\n        },\n        closable: !insertPending,\n        maskClosable: !insertPending,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(AddNewForm, {\n        ref: this.addNewForm,\n        insertPending: this.props.insert.status === 'pending',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return License;\n}(React.Component);\n\nexport default connect(License);","map":{"version":3,"sources":["D:\\ppp\\react-base\\src\\app\\pages\\License\\index.tsx"],"names":["React","update","moment","api","connect","SearchForm","AddNewForm","License","state","modal","visible","table","pagination","pageSize","data","fetching","expandedRowKeys","Set","visibleRowKeys","query","paging","limit","page","sort","filters","fetchTableData","license","fetch","setState","$set","meta","title","dataIndex","render","text","record","has","key","repeat","slice","handleToggleKeyVisible","format","type","device_count","handleExpand","enabled","oldExpands","collapsed","add","device","license_key","idx","findIndex","v","devices","oldVisibles","showModal","hideModal","addNewForm","createRef","handleCreate","form","current","validateFields","err","values","customerId","props","insert","handleTableChange","sorter","pager","order","field","handleOnFilterChange","prevProps","status","success","resetFields","error","insertPending","rowKeys","Array","from","marginBottom","item","width","info","id","created_at","disabled","Component"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport update from 'immutability-helper';\r\nimport { Row, Col, Table, Tag, Button, List, Icon, Switch, message, Modal, Popconfirm } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport api from '../../services'\r\nimport connect from './connect';\r\nimport SearchForm from './components/SearchForm';\r\nimport AddNewForm from './components/AddNewForm';\r\n\r\n\r\n\r\nclass License extends React.Component<any> {\r\n  state = { \r\n    modal: {\r\n      visible: false\r\n    },\r\n    table: {\r\n      pagination: {\r\n        pageSize: 10\r\n      },\r\n      data: [],\r\n      fetching: false,\r\n      expandedRowKeys: new Set<string>(),\r\n      visibleRowKeys: new Set<string>(),\r\n      query: {\r\n        paging: {\r\n          limit: 10,\r\n          page: 1,\r\n          sort: null\r\n        },\r\n        filters: {}\r\n      }\r\n    }\r\n  };\r\n\r\n  fetchTableData = async () => {\r\n    let data = await api.license.fetch(this.state.table.query);\r\n    this.setState(update(this.state, {\r\n      table: {\r\n        data: { $set: data },\r\n        fetching: { $set: true }\r\n      }\r\n    }), () => {\r\n      this.setState(update(this.state, {\r\n        table: {\r\n          fetching: { $set: false }\r\n        }\r\n      }));\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchTableData();\r\n  }\r\n  \r\n  meta = [\r\n    {\r\n      title: 'ライセンスキー',\r\n      dataIndex: 'key',\r\n      render: (text: any, record: any) => {\r\n        let visible = this.state.table.visibleRowKeys.has(record.key);\r\n        return (\r\n          <>\r\n            {visible?text:(('#'.repeat(8)+'-').repeat(3) + text.slice(-8))}　\r\n            <a href=\"#n\" onClick={()=>this.handleToggleKeyVisible(record)}><Icon type={visible?'eye-invisible':'eye'} /></a>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: '開始日',\r\n      dataIndex: 'created_at',\r\n      render: (text: any, record: any) => (\r\n        <>\r\n          {moment(text).format('Y/MM/DD')}\r\n        </>\r\n      ),\r\n    },\r\n    \r\n    {\r\n      title: '有効期限',\r\n      dataIndex: 'expire',\r\n      render: (text: any, record: any) => (\r\n        <>\r\n          {moment(text).format('Y/MM/DD')}\r\n        </>\r\n      ),\r\n    },\r\n    \r\n    {\r\n      title: 'お客様名',\r\n      dataIndex: 'name',\r\n      render: (text: any, record: any) => (\r\n        <>\r\n          <Tag color={record.type === 1 ? 'geekblue' : 'green'}>\r\n            {{1:'個人', 2:'法人'}[record.type as number]}\r\n          </Tag>\r\n          {text}\r\n        </>\r\n      ),\r\n    },\r\n  \r\n    {\r\n      title: 'デバイス',\r\n      dataIndex: 'device_count',\r\n      render: (text, record) => \r\n      <>\r\n        {record.device_count} \r\n        件　\r\n        {record.device_count > 0 && <span className={`ant-table-row-expand-icon ant-table-row-${this.state.table.expandedRowKeys.has(record.key) ? 'expanded' : 'collapsed'}`} onClick={()=>this.handleExpand(record)}/> }\r\n      </>,\r\n    },\r\n  \r\n    {\r\n      title: '状態',\r\n      dataIndex: 'enabled',\r\n      render: (text, record) => (\r\n        <Popconfirm title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\" onConfirm={()=>{\r\n        }}>\r\n          <Switch size=\"small\" checked={record.enabled}/>\r\n        </Popconfirm>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  handleExpand = async (record) => {\r\n    let oldExpands = this.state.table.expandedRowKeys as Set<string>;\r\n    let collapsed = oldExpands.has(record.key);\r\n    collapsed \r\n      ? oldExpands.delete(record.key)\r\n      : oldExpands.add(record.key);\r\n\r\n    this.setState(update(this.state, {\r\n      table: {\r\n        expandedRowKeys: {\r\n          $set: oldExpands\r\n        }\r\n      }\r\n    }));\r\n\r\n    if(!collapsed) {\r\n      let data = await api.device.fetch({\r\n        license_key: record.key\r\n      });\r\n\r\n      // this.state.table.data.findIndex(v=>v.key===record.key);\r\n\r\n      let idx = this.state.table.data.findIndex(v=>v.key===record.key);\r\n      this.setState(update(this.state, {\r\n        table: {\r\n          data: {\r\n            [idx] : {\r\n              devices: {\r\n                $set: data\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleToggleKeyVisible = (record) => {\r\n    let oldVisibles = this.state.table.visibleRowKeys as Set<string>;\r\n    oldVisibles.has(record.key) \r\n      ? oldVisibles.delete(record.key)\r\n      : oldVisibles.add(record.key);\r\n\r\n    this.setState(update(this.state, {\r\n      table: {\r\n        visibleRowKeys: {\r\n          $set: oldVisibles\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState(update(this.state, {\r\n      modal: {\r\n        visible: {\r\n          $set: true,\r\n        }\r\n      } \r\n    }));\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState(update(this.state, {\r\n      modal: {\r\n        visible: {\r\n          $set: false,\r\n        }\r\n      } \r\n    }));\r\n  };\r\n\r\n  addNewForm = React.createRef<any>();\r\n  handleCreate = () => {\r\n    const form = this.addNewForm;\r\n    form.current.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      if(values.customerId === 'null') {\r\n        values.customerId = null;\r\n      }\r\n      this.props.insert(values);\r\n    });\r\n  };\r\n\r\n  // saveFormRef = formRef => {\r\n  //   this.formRef = formRef;\r\n  // };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const form = this.addNewForm;\r\n    if(prevProps.insert.status === 'pending') {\r\n      if(this.props.insert.status === 'success') {\r\n        message.success('データを追加した。');\r\n        form.current.resetFields();\r\n        this.hideModal();\r\n      } else {\r\n        message.error('データの追加に失敗しました。');\r\n      }\r\n    }\r\n  };\r\n\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    const pager = { ...this.state.table.pagination } as any;\r\n    pager.current = pagination.current;\r\n    this.setState({\r\n      pagination: pager,\r\n      query : {\r\n        paging: {\r\n          limit: pagination.pageSize,\r\n          page: pagination.current,\r\n          sort: (sorter.order === 'ascend' ? '' : '-') + sorter.field\r\n        },\r\n        filters,\r\n      }\r\n    }, this.fetchTableData);\r\n  };\r\n\r\n  handleOnFilterChange = (filters) => {\r\n    this.setState(update(this.state, {\r\n      table: {\r\n        query: {\r\n          filters: {\r\n            $set: filters\r\n          }\r\n        }\r\n      }\r\n    }), this.fetchTableData);\r\n  }\r\n\r\n  render() {\r\n    let insertPending = this.props.insert.status === 'pending';\r\n    let { table, modal } = this.state;\r\n    let rowKeys = Array.from(table.expandedRowKeys);\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row>\r\n            <Button icon='plus' onClick={this.showModal} type=\"primary\" style={{ marginBottom: 16, float: 'right' }}>\r\n            新規追加\r\n            </Button>\r\n            <SearchForm onFilterChange={this.handleOnFilterChange}/>\r\n          </Row>\r\n          <div className=\"search-result-list\">\r\n            <Table \r\n              dataSource={table.data} \r\n              pagination={table.pagination}\r\n              rowKey={record => record.key}\r\n              loading={table.fetching}\r\n              columns={this.meta}\r\n              onChange={this.handleTableChange}\r\n              expandedRowKeys={rowKeys}\r\n              expandIconAsCell={false}\r\n              expandIcon={()=><></>}\r\n              expandedRowRender={record => \r\n                <List\r\n                  size=\"small\"\r\n                  dataSource={record.devices}\r\n                  renderItem={(item : any, key) => (\r\n                    <List.Item key={key}>\r\n                      <Row style={{width:'100%'}}>\r\n                        <Col span={10}>{key + 1}.&nbsp;{item.info}</Col>\r\n                        <Col span={10}>{item.id}</Col>\r\n                        <Col span={4}>\r\n                          <span style={{float:'right'}}>\r\n                            {moment(item.created_at).format('Y/MM/DD')}\r\n                            に活性化\r\n                          </span>\r\n                        </Col>\r\n                        </Row>\r\n                      </List.Item>\r\n                    )}\r\n                />\r\n               }\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n        <Modal\r\n          visible={modal.visible}\r\n          title=\"新規ライセンスキーを追加\"\r\n          okText=\"追加\"\r\n          onCancel={this.hideModal}\r\n          onOk={this.handleCreate}\r\n          confirmLoading={insertPending}\r\n          cancelButtonProps={{disabled:insertPending}}\r\n          closable={!insertPending}\r\n          maskClosable={!insertPending}\r\n        >\r\n          <AddNewForm\r\n            ref={this.addNewForm}\r\n            insertPending={this.props.insert.status === 'pending'}\r\n          />\r\n        </Modal>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(License);"]},"metadata":{},"sourceType":"module"}