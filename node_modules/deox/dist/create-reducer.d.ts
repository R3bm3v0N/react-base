import { CreateHandlerMap, HandlerMap, InferActionFromHandlerMap, InferNextStateFromHandlerMap } from './create-handler-map';
import { DeepImmutable } from './types';
/**
 * Reducer factory
 * @description combines multiple handler map into single reducer
 * @example
 * const counter = createReducer(0, handleAction => [
 *   handleAction(increment, state => state + 1),
 *   handleAction(decrement, state => state - 1),
 * ])
 */
export declare function createReducer<TPrevState, THandlerMap extends HandlerMap<DeepImmutable<TPrevState>, any, any>>(defaultState: TPrevState, handlerMapsCreator: (handle: CreateHandlerMap<DeepImmutable<TPrevState>>) => THandlerMap[]): (state: DeepImmutable<TPrevState> | undefined, action: InferActionFromHandlerMap<THandlerMap>) => InferNextStateFromHandlerMap<THandlerMap>;
