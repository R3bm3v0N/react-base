import { ActionCreator } from './create-action-creator';
import { AnyAction } from './create-action';
/**
 * Filter actions emitted by the source Observable by only emitting those that
 * are compatible with specified action(s) or action creator(s) or action type(s).
 *
 * @example
 * action$.pipe(
 *   ofType(foo),
 *   ...
 * )
 * @example
 * action$.pipe(
 *   ofType([foo, bar]),
 *   ...
 * )
 */
export declare function ofType<TSource extends AnyAction, TKey extends ActionCreator<TSource> | TSource | TSource['type'], TSink extends TSource = TKey extends (...args: any[]) => infer U ? (U extends TSource ? U : never) : (TKey extends TSource ? TKey : never)>(keys: TKey | TKey[]): import("rxjs/internal/types").OperatorFunction<TSource, TSink>;
